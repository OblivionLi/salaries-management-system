name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-22.04

    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USERNAME: ${{ secrets.DB_USERNAME }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      SPRING_PROFILE: ${{ secrets.SPRING_PROFILE }}
      API_URL: ${{ secrets.API_URL }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Install Docker Compose
        run: |
          DOCKER_CONFIG=${DOCKER_CONFIG:-$HOME/.docker}
          mkdir -p $DOCKER_CONFIG/cli-plugins
          curl -SL https://github.com/docker/compose/releases/download/v2.23.3/docker-compose-linux-x86_64 -o $DOCKER_CONFIG/cli-plugins/docker-compose
          chmod +x $DOCKER_CONFIG/cli-plugins/docker-compose
          docker compose version

#      - name: Log in to Docker Hub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Create .env file
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "SPRING_PROFILE=${{ secrets.SPRING_PROFILE }}" >> .env
          echo "API_URL=${{ secrets.API_URL }}" >> .env
          echo "KAFKA_CONSUMER_GROUP_ID=${{ secrets.KAFKA_CONSUMER_GROUP_ID }}" >> .env

      - name: Build and test
        working-directory: .
        run: |
          docker compose build
          docker compose up -d
          
          sleep 30
          
          docker compose ps
      - name: Cleanup
        if: always()
        working-directory: .
        run: docker compose down --volumes --remove-orphans